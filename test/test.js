// Generated by CoffeeScript 1.6.3
(function() {
  var ID_ATTR, assert, db, fs, json_crud, suite, vows;

  vows = require('vows');

  assert = require('assert');

  json_crud = require('../index');

  fs = require('fs');

  ID_ATTR = (new Date).valueOf();

  db = json_crud('test_db');

  suite = vows.describe('JSON CRUD');

  suite.addBatch({
    'Drop table': {
      topic: function() {
        return db.drop('test_table_1', this.callback);
      },
      "Was dropped": {
        topic: function() {
          return db.all('test_table_1', this.callback);
        },
        "Is empty": function(recs) {
          return assert.lengthOf(recs, 0);
        }
      }
    }
  });

  suite.addBatch({
    'Insert': {
      topic: function() {
        return db.put('test_table_1', {
          abc: 123,
          _id: ID_ATTR
        }, this.callback);
      },
      'Check inserted record': {
        topic: function() {
          return db.all('test_table_1', this.callback);
        },
        'Has 1 record': function(recs) {
          return assert.lengthOf(recs, 1);
        },
        'Has correct attribute': function(recs) {
          return assert.equal(recs[0].abc, 123);
        },
        'Has correct ID': function(recs) {
          return assert.equal(recs[0]._id, ID_ATTR);
        }
      }
    }
  });

  suite.addBatch({
    'Cleanup': {
      topic: function() {
        return db.drop('test_table_1', this.callback);
      },
      'Delete DB': {
        topic: function() {
          return fs.rmdir("test_db.db", this.callback);
        },
        'Unlink': {
          topic: function() {
            return fs.exists('test_db.db', this.callback);
          },
          'All Gone': function(exists) {
            return assert.equal(exists, false);
          }
        }
      }
    }
  });

  suite.run();

  exports.suite = suite;

}).call(this);
